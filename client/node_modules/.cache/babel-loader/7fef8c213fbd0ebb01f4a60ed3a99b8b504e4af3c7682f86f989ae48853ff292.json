{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { getAllPosts, getCommentsByPost } from \"../apis/apiService.js\";\nfunction* watchGetAllPosts() {\n  try {\n    const result = yield call(getAllPosts);\n    if (result && result.status === 200) {\n      yield put({\n        type: \"GET_ALL_POSTS_SUCCESS\",\n        payload: result\n      });\n    } else {\n      yield put({\n        type: \"GET_ALL_POSTS_FAILURE\"\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: \"GET_ALL_POSTS_FAILURE\",\n      payload: error.response.message\n    });\n  }\n}\n// function* watchGetCommentsByPost(data) {\n//   try {\n//     const result = yield call(getCommentsByPost(data));\n//     if (result && result.status === 200) {\n//       yield put({ type: \"GET_COMMENTS_BY_POST_SUCCESS\", payload: result });\n//     } else {\n//       yield put({ type: \"GET_COMMENTS_BY_POST_FAILURE\" });\n//     }\n//   } catch (error) {\n//     yield put({\n//       type: \"GET_COMMENTS_BY_POST_FAILURE\",\n//       payload: error.response.message,\n//     });\n//   }\n// }\nfunction* watchGetUser() {\n  yield put({\n    type: \"GET_USER_SUCCESS\"\n  });\n}\nfunction* Saga() {\n  yield takeLatest(\"GET_ALL_POSTS\", watchGetAllPosts);\n  yield takeLatest(\"GET_USER\", watchGetUser);\n  // yield takeLatest(\"GET_COMMENTS_BY_POST\", watchGetCommentsByPost);\n}\n_c = Saga;\nexport default Saga;\nvar _c;\n$RefreshReg$(_c, \"Saga\");","map":{"version":3,"names":["call","put","takeLatest","getAllPosts","getCommentsByPost","watchGetAllPosts","result","status","type","payload","error","response","message","watchGetUser","Saga","_c","$RefreshReg$"],"sources":["C:/Users/Le Phuoc Dat/Downloads/Code/ZIGVY/interview-home-work/src/redux/saga.js"],"sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { getAllPosts, getCommentsByPost } from \"../apis/apiService.js\";\r\n\r\nfunction* watchGetAllPosts() {\r\n  try {\r\n    const result = yield call(getAllPosts);\r\n    if (result && result.status === 200) {\r\n      yield put({ type: \"GET_ALL_POSTS_SUCCESS\", payload: result });\r\n    } else {\r\n      yield put({ type: \"GET_ALL_POSTS_FAILURE\" });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: \"GET_ALL_POSTS_FAILURE\",\r\n      payload: error.response.message,\r\n    });\r\n  }\r\n}\r\n// function* watchGetCommentsByPost(data) {\r\n//   try {\r\n//     const result = yield call(getCommentsByPost(data));\r\n//     if (result && result.status === 200) {\r\n//       yield put({ type: \"GET_COMMENTS_BY_POST_SUCCESS\", payload: result });\r\n//     } else {\r\n//       yield put({ type: \"GET_COMMENTS_BY_POST_FAILURE\" });\r\n//     }\r\n//   } catch (error) {\r\n//     yield put({\r\n//       type: \"GET_COMMENTS_BY_POST_FAILURE\",\r\n//       payload: error.response.message,\r\n//     });\r\n//   }\r\n// }\r\nfunction* watchGetUser() {\r\n  yield put({ type: \"GET_USER_SUCCESS\" });\r\n}\r\nfunction* Saga() {\r\n  yield takeLatest(\"GET_ALL_POSTS\", watchGetAllPosts);\r\n  yield takeLatest(\"GET_USER\", watchGetUser);\r\n  // yield takeLatest(\"GET_COMMENTS_BY_POST\", watchGetCommentsByPost);\r\n\r\n}\r\n\r\nexport default Saga;"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,SAASC,WAAW,EAAEC,iBAAiB,QAAQ,uBAAuB;AAEtE,UAAUC,gBAAgBA,CAAA,EAAG;EAC3B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMN,IAAI,CAACG,WAAW,CAAC;IACtC,IAAIG,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,GAAG,EAAE;MACnC,MAAMN,GAAG,CAAC;QAAEO,IAAI,EAAE,uBAAuB;QAAEC,OAAO,EAAEH;MAAO,CAAC,CAAC;IAC/D,CAAC,MAAM;MACL,MAAML,GAAG,CAAC;QAAEO,IAAI,EAAE;MAAwB,CAAC,CAAC;IAC9C;EACF,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMT,GAAG,CAAC;MACRO,IAAI,EAAE,uBAAuB;MAC7BC,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACC;IAC1B,CAAC,CAAC;EACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUC,YAAYA,CAAA,EAAG;EACvB,MAAMZ,GAAG,CAAC;IAAEO,IAAI,EAAE;EAAmB,CAAC,CAAC;AACzC;AACA,UAAUM,IAAIA,CAAA,EAAG;EACf,MAAMZ,UAAU,CAAC,eAAe,EAAEG,gBAAgB,CAAC;EACnD,MAAMH,UAAU,CAAC,UAAU,EAAEW,YAAY,CAAC;EAC1C;AAEF;AAACE,EAAA,GALSD,IAAI;AAOd,eAAeA,IAAI;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}