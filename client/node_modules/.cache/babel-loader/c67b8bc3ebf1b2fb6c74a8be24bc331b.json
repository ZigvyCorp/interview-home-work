{"ast":null,"code":"import { INIT_STATE } from '../../constant';\nimport { getPosts, getType, createPost, updatePost } from '../actions';\nexport default function postsReducers(state = INIT_STATE.posts, action) {\n  switch (action.type) {\n    case getType(getPosts.getPostsRequest):\n      return { ...state,\n        isLoading: true\n      };\n\n    case getType(getPosts.getPostsSuccess):\n      return { ...state,\n        isLoading: false,\n        data: action.payload\n      };\n\n    case getType(getPosts.getPostsFailure):\n      return { ...state,\n        isLoading: false\n      };\n\n    case getType(createPost.createPostSuccess):\n      return { ...state,\n        data: [...state.data, action.payload]\n      };\n\n    case getType(updatePost.updatePostSuccess):\n      return { ...state,\n        data: state.data.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/interview-home/mern-app-client/src/redux/reducers/posts.js"],"names":["INIT_STATE","getPosts","getType","createPost","updatePost","postsReducers","state","posts","action","type","getPostsRequest","isLoading","getPostsSuccess","data","payload","getPostsFailure","createPostSuccess","updatePostSuccess","map","post","_id"],"mappings":"AAAA,SAASA,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,UAA5B,EAAwCC,UAAxC,QAA0D,YAA1D;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGN,UAAU,CAACO,KAA1C,EAAiDC,MAAjD,EAAyD;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACD,QAAQ,CAACS,eAAV,CAAZ;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKT,OAAO,CAACD,QAAQ,CAACW,eAAV,CAAZ;AACE,aAAO,EACL,GAAGN,KADE;AAELK,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,IAAI,EAAEL,MAAM,CAACM;AAHR,OAAP;;AAKF,SAAKZ,OAAO,CAACD,QAAQ,CAACc,eAAV,CAAZ;AACE,aAAO,EACL,GAAGT,KADE;AAELK,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKT,OAAO,CAACC,UAAU,CAACa,iBAAZ,CAAZ;AACE,aAAO,EACL,GAAGV,KADE;AAELO,QAAAA,IAAI,EAAE,CAAC,GAAGP,KAAK,CAACO,IAAV,EAAgBL,MAAM,CAACM,OAAvB;AAFD,OAAP;;AAIF,SAAKZ,OAAO,CAACE,UAAU,CAACa,iBAAZ,CAAZ;AACE,aAAO,EACL,GAAGX,KADE;AAELO,QAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,CAAWK,GAAX,CAAgBC,IAAD,IACnBA,IAAI,CAACC,GAAL,KAAaZ,MAAM,CAACM,OAAP,CAAeM,GAA5B,GAAkCZ,MAAM,CAACM,OAAzC,GAAmDK,IAD/C;AAFD,OAAP;;AAMF;AACE,aAAOb,KAAP;AA9BJ;AAgCD","sourcesContent":["import { INIT_STATE } from '../../constant';\r\nimport { getPosts, getType, createPost, updatePost } from '../actions';\r\n\r\nexport default function postsReducers(state = INIT_STATE.posts, action) {\r\n  switch (action.type) {\r\n    case getType(getPosts.getPostsRequest):\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case getType(getPosts.getPostsSuccess):\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n      };\r\n    case getType(getPosts.getPostsFailure):\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case getType(createPost.createPostSuccess):\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n      };\r\n    case getType(updatePost.updatePostSuccess):\r\n      return {\r\n        ...state,\r\n        data: state.data.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}