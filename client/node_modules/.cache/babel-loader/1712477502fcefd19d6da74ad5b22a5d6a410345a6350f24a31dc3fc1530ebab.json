{"ast":null,"code":"import axios from 'axios';\nconst buildAxiosConfig = (api, method, headers = null) => {\n  let config = {\n    url: api,\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  if (headers) config.headers = {\n    ...config.headers,\n    ...headers\n  };\n  if (headers !== null && headers !== void 0 && headers.responseType) config.responseType = headers.responseType;\n  return config;\n};\nconst callAxios = (api, payload = null, method, headers = null) => {\n  const config = buildAxiosConfig(api, method, headers);\n  if (payload) {\n    if (method === 'get') config.params = payload;else config.data = payload;\n  }\n  return axios(config).then(res => {\n    return res;\n  }).catch(err => {\n    var _err$response, _err$response2;\n    const status = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status;\n    const data = (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data;\n    console.log('err', err);\n  });\n};\nexport const get = (api, params = null, headers = null) => {\n  return callAxios(api, params, 'get', headers);\n};","map":{"version":3,"names":["axios","buildAxiosConfig","api","method","headers","config","url","Accept","responseType","callAxios","payload","params","data","then","res","catch","err","_err$response","_err$response2","status","response","console","log","get"],"sources":["C:/Users/Le Phuoc Dat/Downloads/Code/ZIGVY/interview-home-work/client/src/util/js/APICaller.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst buildAxiosConfig = (api, method, headers = null) => {\r\n  let config = {\r\n    url: api,\r\n    method: method,\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  if (headers) config.headers = { ...config.headers, ...headers };\r\n  if (headers?.responseType) config.responseType = headers.responseType;\r\n  return config;\r\n};\r\n\r\nconst callAxios = (api, payload = null, method, headers = null) => {\r\n  const config = buildAxiosConfig(api, method, headers);\r\n  if (payload) {\r\n    if (method === 'get') config.params = payload;\r\n    else config.data = payload;\r\n  }\r\n\r\n  return axios(config)\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      const status = err.response?.status;\r\n      const data = err.response?.data;\r\n      console.log('err', err);\r\n    });\r\n};\r\n\r\nexport const get = (\r\n  api,\r\n  params = null,\r\n  headers = null,\r\n) => {\r\n  return callAxios(api, params, 'get', headers);\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,GAAG,IAAI,KAAK;EACxD,IAAIC,MAAM,GAAG;IACXC,GAAG,EAAEJ,GAAG;IACRC,MAAM,EAAEA,MAAM;IACdC,OAAO,EAAE;MACPG,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB;EACF,CAAC;EACD,IAAIH,OAAO,EAAEC,MAAM,CAACD,OAAO,GAAG;IAAE,GAAGC,MAAM,CAACD,OAAO;IAAE,GAAGA;EAAQ,CAAC;EAC/D,IAAIA,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEI,YAAY,EAAEH,MAAM,CAACG,YAAY,GAAGJ,OAAO,CAACI,YAAY;EACrE,OAAOH,MAAM;AACf,CAAC;AAED,MAAMI,SAAS,GAAGA,CAACP,GAAG,EAAEQ,OAAO,GAAG,IAAI,EAAEP,MAAM,EAAEC,OAAO,GAAG,IAAI,KAAK;EACjE,MAAMC,MAAM,GAAGJ,gBAAgB,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,CAAC;EACrD,IAAIM,OAAO,EAAE;IACX,IAAIP,MAAM,KAAK,KAAK,EAAEE,MAAM,CAACM,MAAM,GAAGD,OAAO,CAAC,KACzCL,MAAM,CAACO,IAAI,GAAGF,OAAO;EAC5B;EAEA,OAAOV,KAAK,CAACK,MAAM,CAAC,CACjBQ,IAAI,CAAEC,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IAAA,IAAAC,aAAA,EAAAC,cAAA;IACd,MAAMC,MAAM,IAAAF,aAAA,GAAGD,GAAG,CAACI,QAAQ,cAAAH,aAAA,uBAAZA,aAAA,CAAcE,MAAM;IACnC,MAAMP,IAAI,IAAAM,cAAA,GAAGF,GAAG,CAACI,QAAQ,cAAAF,cAAA,uBAAZA,cAAA,CAAcN,IAAI;IAC/BS,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEN,GAAG,CAAC;EACzB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMO,GAAG,GAAGA,CACjBrB,GAAG,EACHS,MAAM,GAAG,IAAI,EACbP,OAAO,GAAG,IAAI,KACX;EACH,OAAOK,SAAS,CAACP,GAAG,EAAES,MAAM,EAAE,KAAK,EAAEP,OAAO,CAAC;AAC/C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}