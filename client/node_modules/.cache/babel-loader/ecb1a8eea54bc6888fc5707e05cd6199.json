{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tttro\\\\mern-app-client\\\\src\\\\components\\\\CreatePostModal\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Modal, TextareaAutosize, TextField } from '@material-ui/core';\nimport FileBase64 from 'react-file-base64';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { modalState$ } from '../../redux/selectors';\nimport useStyles from './styles';\nimport { createPost, hideModal } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePostModal() {\n  _s();\n\n  const [data, setData] = React.useState({\n    title: '',\n    content: '',\n    attachment: ''\n  });\n  const dispatch = useDispatch();\n  const {\n    isShow\n  } = useSelector(modalState$);\n  const classes = useStyles();\n  const onClose = React.useCallback(() => {\n    dispatch(hideModal());\n    setData({\n      title: '',\n      content: '',\n      attachment: ''\n    });\n  }, [dispatch]);\n  const onSubmit = React.useCallback(() => {\n    dispatch(createPost.createPostRequest(data));\n    onClose();\n  }, [data, dispatch, onClose]);\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.paper,\n    id: \"simple-modal-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.title,\n        required: true,\n        label: \"Title\",\n        value: data.title,\n        onChange: e => setData({ ...data,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        className: classes.textarea,\n        rowsMin: 10,\n        rowsMax: 15,\n        placeholder: \"Content...\",\n        value: data.content,\n        onChange: e => setData({ ...data,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileBase64, {\n        accept: \"image/*\",\n        multiple: false,\n        type: \"file\",\n        value: data.attachment,\n        onDone: ({\n          base64\n        }) => setData({ ...data,\n          attachment: base64\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.footer,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"span\",\n          fullWidth: true,\n          onClick: onSubmit,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: isShow,\n      onClose: onClose,\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePostModal, \"v1nr0eXQpInuerE37rm6R7mrOWs=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = CreatePostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePostModal\");","map":{"version":3,"sources":["C:/Users/tttro/mern-app-client/src/components/CreatePostModal/index.js"],"names":["Button","Modal","TextareaAutosize","TextField","FileBase64","React","useSelector","useDispatch","modalState$","useStyles","createPost","hideModal","CreatePostModal","data","setData","useState","title","content","attachment","dispatch","isShow","classes","onClose","useCallback","onSubmit","createPostRequest","body","paper","form","e","target","value","textarea","base64","footer"],"mappings":"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","sourcesContent":["import { Button, Modal, TextareaAutosize, TextField } from '@material-ui/core';\r\nimport FileBase64 from 'react-file-base64';\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { modalState$ } from '../../redux/selectors';\r\nimport useStyles from './styles';\r\nimport { createPost, hideModal } from '../../redux/actions';\r\n\r\nexport default function CreatePostModal() {\r\n  const [data, setData] = React.useState({\r\n    title: '',\r\n    content: '',\r\n    attachment: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const { isShow } = useSelector(modalState$);\r\n  const classes = useStyles();\r\n\r\n  const onClose = React.useCallback(() => {\r\n    dispatch(hideModal());\r\n    setData({\r\n      title: '',\r\n      content: '',\r\n      attachment: '',\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const onSubmit = React.useCallback(() => {\r\n    dispatch(createPost.createPostRequest(data));\r\n    onClose();\r\n  }, [data, dispatch, onClose]);\r\n\r\n  const body = (\r\n    <div className={classes.paper} id='simple-modal-title'>\r\n      <h2>Create New Post</h2>\r\n      <form noValidate autoComplete='off' className={classes.form}>\r\n        <TextField\r\n          className={classes.title}\r\n          required\r\n          label='Title'\r\n          value={data.title}\r\n          onChange={(e) => setData({ ...data, title: e.target.value })}\r\n        />\r\n        <TextareaAutosize\r\n          className={classes.textarea}\r\n          rowsMin={10}\r\n          rowsMax={15}\r\n          placeholder='Content...'\r\n          value={data.content}\r\n          onChange={(e) => setData({ ...data, content: e.target.value })}\r\n        />\r\n        <FileBase64\r\n          accept='image/*'\r\n          multiple={false}\r\n          type='file'\r\n          value={data.attachment}\r\n          onDone={({ base64 }) => setData({ ...data, attachment: base64 })}\r\n        />\r\n        <div className={classes.footer}>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            component='span'\r\n            fullWidth\r\n            onClick={onSubmit}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal open={isShow} onClose={onClose}>\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}