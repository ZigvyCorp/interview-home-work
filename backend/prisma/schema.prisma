// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          Int      @id @unique @default(autoincrement())
    firstName   String   @map("first_name") @db.VarChar(100)
    lastName    String   @map("last_name") @db.VarChar(255)
    username    String   @unique(map: "username_UNIQUE") @db.VarChar(100)
    email       String   @db.VarChar(500)
    createdDate DateTime @default(now()) @map("created_date")
    deleted     Boolean  @default(false) @map("deleted")

    postList    Post[]
    commentList Comment[]

    @@map("users")
}

model Post {
    id            Int      @id @unique @default(autoincrement())
    userID        Int      @map("user_id")
    title         String   @map("title") @db.VarChar(255)
    body          String   @map("body") @db.VarChar(500)
    totalComments Int      @map("total_comments")
    tags          String[] @map("tags")
    createdDate   DateTime @default(now()) @map("created_date")
    deleted       Boolean  @default(false) @map("deleted")

    userDetail  User      @relation(fields: [userID], references: [id])
    commentList Comment[]

    @@map("posts")
}

model Comment {
    id          Int      @id @unique @default(autoincrement())
    body        String   @map("body") @db.VarChar(500)
    postID      Int      @map("post_id")
    userID      Int      @map("user_id")
    createdDate DateTime @default(now()) @map("created_date")
    deleted     Boolean  @default(false) @map("deleted")

    postDetail Post @relation(fields: [postID], references: [id])
    userDetail User @relation(fields: [userID], references: [id])

    @@map("comments")
}
