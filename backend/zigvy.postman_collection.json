{
	"info": {
		"_postman_id": "2ef060f9-a246-4599-965b-76ea6273a64f",
		"name": "zigvy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27739736"
	},
	"item": [
		{
			"name": "post",
			"item": [
				{
					"name": "Get posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get post",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/posts/65e0b867ae632ccb9e0cd121",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"posts",
								"65e0b867ae632ccb9e0cd121"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update post",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"owner\": \"65e0b821ae632ccb9e0cd11b\",\n    \"title\": \"Hello world\",\n    \"content\": \"A \\\"Hello, World!\\\" program is traditionally used to introduce novice programmers to a programming language. \\\"Hello, World!\\\" is also traditionally used in a sanity test to make sure that a computer language is correctly installed, and that the operator understands how to use it. \\\"Time to hello world\\\" (TTHW) is a metric for the time to author a \\\"Hello World\\\" program in a given programming language and run it. History: \\\"Hello, World!\\\" program by Brian Kernighan (1978) While small test programs have existed since the development of programmable computers, the tradition of using the phrase \\\"Hello World!\\\" as a test message was influenced by an example program in the seminal 1978 book The C Programming Language [4] The example program in that book prints \\\"hello, world\\\", and was inherited from a 1974 Bell Laboratories internal memorandum by Brian Kernighan, Programming in C: A Tutorial:[5] - Wikipedia\",\n    \"tags\": [\"consult\", \"it\"]\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/posts/65e0b867ae632ccb9e0cd121",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"posts",
								"65e0b867ae632ccb9e0cd121"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add post",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"owner\": \"65e0b821ae632ccb9e0cd11b\",\n    \"title\": \"Hello\",\n    \"content\": \"A \\\"Hello, World!\\\" program is traditionally used to introduce novice programmers to a programming language. \\\"Hello, World!\\\" is also traditionally used in a sanity test to make sure that a computer language is correctly installed, and that the operator understands how to use it. \\\"Time to hello world\\\" (TTHW) is a metric for the time to author a \\\"Hello World\\\" program in a given programming language and run it. History: \\\"Hello, World!\\\" program by Brian Kernighan (1978) While small test programs have existed since the development of programmable computers, the tradition of using the phrase \\\"Hello World!\\\" as a test message was influenced by an example program in the seminal 1978 book The C Programming Language [4] The example program in that book prints \\\"hello, world\\\", and was inherited from a 1974 Bell Laboratories internal memorandum by Brian Kernighan, Programming in C: A Tutorial:[5] - Wikipedia\",\n    \"tags\": [\"consult\", \"it\", \"hala\"]\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/posts/65e0b867ae632ccb9e0cd12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"posts",
								"65e0b867ae632ccb9e0cd12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get post comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/posts/65e0b867ae632ccb9e0cd121/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"posts",
								"65e0b867ae632ccb9e0cd121",
								"comments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "comment",
			"item": [
				{
					"name": "Get comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comments by post",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/comments?postId=65e0b867ae632ccb9e0cd121",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "postId",
									"value": "65e0b867ae632ccb9e0cd121"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add comment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"owner\": \"65e0b83eae632ccb9e0cd11d\",\n    \"post\": \"65e0b867ae632ccb9e0cd121\",\n    \"id\": \"65e0a5f346fb232e16350350\",\n    \"content\": \"Delightful unreserved impossible few estimating men favourable see entreaties. She propriety immediate was improving. He or entrance humoured likewise moderate. Much nor game son say feel.\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update comment",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"owner\": \"65e0b821ae632ccb9e0cd11b\",\n    \"post\": \"65e0b867ae632ccb9e0cd121\",\n    \"content\": \"Delightful unreserved impossible few estimating men favourable see entreaties. She propriety immediate was improving. He or entrance humoured likewise moderate. Much nor game son say feel. Fat make met can must form into gate. Me we offending prevailed discovery update.\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/comments/65e0b898ae632ccb9e0cd127",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"comments",
								"65e0b898ae632ccb9e0cd127"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/comments/65e0b898ae632ccb9e0cd128",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"comments",
								"65e0b898ae632ccb9e0cd128"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/comments/65e0b898ae632ccb9e0cd128",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"comments",
								"65e0b898ae632ccb9e0cd128"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Get users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/users/65e0b821ae632ccb9e0cd11b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"65e0b821ae632ccb9e0cd11b"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}