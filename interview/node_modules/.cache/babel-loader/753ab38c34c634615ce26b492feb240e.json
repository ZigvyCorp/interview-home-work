{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nconst urlPosts = 'https://jsonplaceholder.typicode.com/posts';\nconst dispatch = useDispatch();\n\nconst getPosts = async () => {\n  const data = await axios({\n    method: \"get\",\n    url: urlPosts\n  }).then(result => result.data).catch(error => {\n    throw error;\n  });\n};\n\nfunction* axiosPost(action) {\n  try {\n    const posts = yield call(getPosts);\n    yield put({\n      type: 'GET_POSTS_SUCCESS',\n      posts: posts\n    });\n  } catch (e) {\n    yield put({\n      type: 'GET_POSTS_FAILED',\n      message: e.message\n    });\n  }\n}\n\nexport function* postsSaga() {\n  yield takeEvery('GET_POSTS_REQUEST', axiosPost);\n} // export default {postsSaga};","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/test/interview/src/saga/index.js"],"names":["call","put","takeEvery","takeLatest","axios","useDispatch","urlPosts","dispatch","getPosts","data","method","url","then","result","catch","error","axiosPost","action","posts","type","e","message","postsSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,MAAMC,QAAQ,GAAG,4CAAjB;AAEA,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AAEA,MAAMG,QAAQ,GAAG,YAAW;AAE1B,QAAMC,IAAI,GAAG,MAAML,KAAK,CAAC;AACvBM,IAAAA,MAAM,EAAE,KADe;AAEvBC,IAAAA,GAAG,EAAEL;AAFkB,GAAD,CAAL,CAGhBM,IAHgB,CAGXC,MAAM,IAAIA,MAAM,CAACJ,IAHN,EAGYK,KAHZ,CAGmBC,KAAD,IAAW;AAAC,UAAMA,KAAN;AAAY,GAH1C,CAAnB;AAID,CAND;;AAQA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC1B,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMlB,IAAI,CAACQ,QAAD,CAAxB;AACA,UAAMP,GAAG,CAAC;AAACkB,MAAAA,IAAI,EAAE,mBAAP;AAA4BD,MAAAA,KAAK,EAAEA;AAAnC,KAAD,CAAT;AACD,GAHD,CAGE,OAAOE,CAAP,EAAU;AACV,UAAMnB,GAAG,CAAC;AAACkB,MAAAA,IAAI,EAAE,kBAAP;AAA2BE,MAAAA,OAAO,EAAED,CAAC,CAACC;AAAtC,KAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAMpB,SAAS,CAAC,mBAAD,EAAsBc,SAAtB,CAAf;AACD,C,CAED","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst urlPosts = 'https://jsonplaceholder.typicode.com/posts';\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst getPosts = async() => {\r\n    \r\n  const data = await axios({\r\n    method: \"get\",\r\n    url: urlPosts\r\n  }).then(result => result.data).catch((error) => {throw error});\r\n}\r\n\r\nfunction* axiosPost(action) {\r\n  try {\r\n    const posts = yield call(getPosts);\r\n    yield put({type: 'GET_POSTS_SUCCESS', posts: posts});\r\n  } catch (e) {\r\n    yield put({type: 'GET_POSTS_FAILED', message: e.message});\r\n  }\r\n}\r\n\r\nexport function* postsSaga() {\r\n  yield takeEvery('GET_POSTS_REQUEST', axiosPost);\r\n}\r\n\r\n// export default {postsSaga};"]},"metadata":{},"sourceType":"module"}