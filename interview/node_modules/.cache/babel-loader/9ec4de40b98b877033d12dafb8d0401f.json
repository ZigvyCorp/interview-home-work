{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoang\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\test\\\\interview\\\\src\\\\Components\\\\Page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Pagination } from './Pagination';\nimport { ListPost } from './ListPost';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { setSearchPosts } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Page = () => {\n  _s();\n\n  // const [searchPosts, setSearchPosts] = useState(null);\n  // let [currentPosts, setCurrentPosts] = useState([]);\n  const searchRef = useRef();\n  const currentPage = useSelector(state => state.currentPage);\n  const dispatch = useDispatch();\n  const postsPerPage = useSelector(state => state.postsPerPage);\n  const posts = useSelector(state => state.posts);\n  const searchPosts = useSelector(state => state.searchPosts);\n  const indexOfLastPage = currentPage * postsPerPage;\n  const indexOfFirstPage = indexOfLastPage - postsPerPage; // if(searchPosts) {\n  //   currentPosts = searchPosts.slice(indexOfFirstPage, indexOfLastPage);\n  // }\n  // else {\n  //   currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n  // }\n\n  const currentPosts = searchPosts.slice(indexOfFirstPage, indexOfLastPage);\n\n  const handleSearch = () => {\n    // console.log(searchRef.current.value);\n    const search = searchRef.current.value.trim();\n    const newPosts = posts.filter(post => post.title.indexOf(search) !== -1); // dispatch(setSearchPosts(newPosts));\n\n    dispatch(setSearchPosts(newPosts));\n    console.log(newPosts);\n  };\n\n  useEffect(() => {\n    dispatch(setSearchPosts(posts));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-dark bg-primary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid input-group\",\n        style: {\n          width: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control me-2\",\n          type: \"search\",\n          placeholder: \"Search\",\n          \"aria-label\": \"Search\",\n          ref: searchRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-light text-dark\",\n          type: \"submit\",\n          onClick: () => handleSearch(),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"h2 mt-5 mb-3 text-danger text-center\",\n      children: [\"LIST OF POSTS ON HOME PAGE \\\"Page \", currentPage, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this), currentPosts.map(post => {\n      return /*#__PURE__*/_jsxDEV(ListPost, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page, \"UPfBdMWsumAfxqGueoccH3q05cI=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/test/interview/src/Components/Page.js"],"names":["React","useEffect","useRef","useState","Pagination","ListPost","useDispatch","useSelector","useParams","setSearchPosts","Page","searchRef","currentPage","state","dispatch","postsPerPage","posts","searchPosts","indexOfLastPage","indexOfFirstPage","currentPosts","slice","handleSearch","search","current","value","trim","newPosts","filter","post","title","indexOf","console","log","width","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAAQC,cAAR,QAA6B,YAA7B;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB;AACA;AACA,QAAMC,SAAS,GAAGT,MAAM,EAAxB;AAEE,QAAMU,WAAW,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,YAAY,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACE,YAAhB,CAAhC;AACA,QAAMC,KAAK,GAAGT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACG,KAAhB,CAAzB;AACA,QAAMC,WAAW,GAAGV,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACI,WAAhB,CAA/B;AAEA,QAAMC,eAAe,GAAGN,WAAW,GAAGG,YAAtC;AACA,QAAMI,gBAAgB,GAAGD,eAAe,GAAGH,YAA3C,CAbsB,CActB;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMK,YAAY,GAAGH,WAAW,CAACI,KAAZ,CAAkBF,gBAAlB,EAAoCD,eAApC,CAArB;;AAEA,QAAMI,YAAY,GAAG,MAAM;AACzB;AACA,UAAMC,MAAM,GAAGZ,SAAS,CAACa,OAAV,CAAkBC,KAAlB,CAAwBC,IAAxB,EAAf;AACA,UAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBR,MAAnB,MAA+B,CAAC,CAArD,CAAjB,CAHyB,CAIzB;;AACAT,IAAAA,QAAQ,CAACL,cAAc,CAACkB,QAAD,CAAf,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD,GAPD;;AASA1B,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACL,cAAc,CAACO,KAAD,CAAf,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACM;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAA6C,QAAA,KAAK,EAAE;AAACkB,UAAAA,KAAK,EAAE;AAAR,SAApD;AAAA,gCAEI;AAAO,UAAA,SAAS,EAAC,mBAAjB;AACA,UAAA,IAAI,EAAC,QADL;AACc,UAAA,WAAW,EAAC,QAD1B;AACmC,wBAAW,QAD9C;AAEE,UAAA,GAAG,EAAEvB;AAFP;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAQ,UAAA,SAAS,EAAC,iCAAlB;AACA,UAAA,IAAI,EAAC,QADL;AACe,UAAA,OAAO,EAAE,MAAMW,YAAY,EAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADN,eAeM;AAAG,MAAA,SAAS,EAAC,sCAAb;AAAA,uDAAsFV,WAAtF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfN,EAiBQQ,YAAY,CAACe,GAAb,CAAiBN,IAAI,IAAI;AACvB,0BAAO,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACO,EAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CAjBR,eAqBM,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YArBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA5DM;;GAAM1B,I;UAKWH,W,EACHD,W,EAEIC,W,EACPA,W,EACMA,W;;;KAVXG,I","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {Pagination} from './Pagination';\r\nimport { ListPost } from './ListPost';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport {setSearchPosts} from '../actions';\r\n\r\n\r\nexport const Page = () => {\r\n  // const [searchPosts, setSearchPosts] = useState(null);\r\n  // let [currentPosts, setCurrentPosts] = useState([]);\r\n  const searchRef = useRef();\r\n\r\n    const currentPage = useSelector(state => state.currentPage);\r\n    const dispatch = useDispatch();\r\n\r\n    const postsPerPage = useSelector(state => state.postsPerPage);\r\n    const posts = useSelector(state => state.posts);\r\n    const searchPosts = useSelector(state => state.searchPosts);\r\n\r\n    const indexOfLastPage = currentPage * postsPerPage;\r\n    const indexOfFirstPage = indexOfLastPage - postsPerPage;\r\n    // if(searchPosts) {\r\n    //   currentPosts = searchPosts.slice(indexOfFirstPage, indexOfLastPage);\r\n    // }\r\n    // else {\r\n    //   currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\r\n    // }\r\n    const currentPosts = searchPosts.slice(indexOfFirstPage, indexOfLastPage);\r\n\r\n    const handleSearch = () => {\r\n      // console.log(searchRef.current.value);\r\n      const search = searchRef.current.value.trim();\r\n      const newPosts = posts.filter(post => post.title.indexOf(search) !== -1);\r\n      // dispatch(setSearchPosts(newPosts));\r\n      dispatch(setSearchPosts(newPosts));\r\n      console.log(newPosts);\r\n    }\r\n\r\n    useEffect(() => {\r\n      dispatch(setSearchPosts(posts));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n              <nav className=\"navbar navbar-dark bg-primary\">\r\n                <div className=\"container-fluid input-group\" style={{width: '500px'}}>\r\n                  \r\n                    <input className=\"form-control me-2\" \r\n                    type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\r\n                      ref={searchRef}\r\n                    /> \r\n                    <button className=\"btn btn-outline-light text-dark\" \r\n                    type=\"submit\"  onClick={() => handleSearch()}\r\n                    >Search</button>\r\n                  \r\n                </div>\r\n              </nav>\r\n              \r\n              <p className=\"h2 mt-5 mb-3 text-danger text-center\">LIST OF POSTS ON HOME PAGE \"Page {currentPage}\"</p>\r\n              {\r\n                currentPosts.map(post => {\r\n                  return <ListPost post={post} key={post.id} />;\r\n                })\r\n              }\r\n              <Pagination />\r\n            </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}