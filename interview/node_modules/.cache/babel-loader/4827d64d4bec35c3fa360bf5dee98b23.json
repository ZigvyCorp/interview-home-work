{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoang\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\test\\\\interview\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { ListPost } from './Components/ListPost';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setData } from './actions';\nimport { Pagination } from './Components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst urlPosts = 'https://jsonplaceholder.typicode.com/posts';\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const currentPage = useSelector(state => state.currentPage);\n  const postsPerPage = useSelector(state => state.postsPerPage);\n\n  const getData = async () => {\n    const data = await axios({\n      method: \"get\",\n      url: urlPosts\n    }).then(result => {\n      dispatch(setData(result.data));\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const indexOfLastPage = currentPage * postsPerPage;\n  const indexOfFirstPage = indexOfLastPage - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-group mb-3 mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        placeholder: \"Search post\",\n        \"aria-label\": \"Recipient's username\",\n        \"aria-describedby\": \"button-addon2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-outline-secondary\",\n        type: \"button\",\n        id: \"button-addon2\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"h2  text-danger text-center\",\n      children: [\"Posts \\\"Page \", currentPage, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), currentPosts.map(post => {\n      return /*#__PURE__*/_jsxDEV(ListPost, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Z4FCqMRaSFt5qT7tdVP3WInNcRM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/test/interview/src/App.js"],"names":["React","useEffect","ListPost","axios","useSelector","useDispatch","setData","Pagination","urlPosts","App","dispatch","posts","state","currentPage","postsPerPage","getData","data","method","url","then","result","indexOfLastPage","indexOfFirstPage","currentPosts","slice","map","post","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,MAAMC,QAAQ,GAAG,4CAAjB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,WAAW,GAAGT,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA/B;AACA,QAAMC,YAAY,GAAGV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACE,YAAhB,CAAhC;;AAEA,QAAMC,OAAO,GAAG,YAAW;AAEzB,UAAMC,IAAI,GAAG,MAAMb,KAAK,CAAC;AACvBc,MAAAA,MAAM,EAAE,KADe;AAEvBC,MAAAA,GAAG,EAAEV;AAFkB,KAAD,CAAL,CAGhBW,IAHgB,CAGXC,MAAM,IAAI;AAChBV,MAAAA,QAAQ,CAACJ,OAAO,CAACc,MAAM,CAACJ,IAAR,CAAR,CAAR;AACD,KALkB,CAAnB;AAMD,GARD;;AAUAf,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMM,eAAe,GAAGR,WAAW,GAAGC,YAAtC;AACA,QAAMQ,gBAAgB,GAAGD,eAAe,GAAGP,YAA3C;AACA,QAAMS,YAAY,GAAGZ,KAAK,CAACa,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,uBAAX;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,cAAzB;AACA,QAAA,WAAW,EAAC,aADZ;AAEA,sBAAW,sBAFX;AAEkC,4BAAiB;AAFnD;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,KAAK,EAAC,2BAAd;AAA0C,QAAA,IAAI,EAAC,QAA/C;AAAwD,QAAA,EAAE,EAAC,eAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAG,MAAA,KAAK,EAAC,6BAAT;AAAA,kCAAoDR,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EASIU,YAAY,CAACE,GAAb,CAAiBC,IAAI,IAAI;AACvB,0BAAO,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CATJ,eAaE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA3CQlB,G;UACUJ,W,EACHD,W,EACMA,W,EACCA,W;;;KAJdK,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { ListPost } from './Components/ListPost';\nimport axios from 'axios';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { setData } from './actions';\nimport { Pagination } from './Components/Pagination';\n\nconst urlPosts = 'https://jsonplaceholder.typicode.com/posts';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const currentPage = useSelector(state => state.currentPage);\n  const postsPerPage = useSelector(state => state.postsPerPage);\n\n  const getData = async() => {\n    \n    const data = await axios({\n      method: \"get\",\n      url: urlPosts\n    }).then(result => {\n      dispatch(setData(result.data));\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const indexOfLastPage = currentPage * postsPerPage;\n  const indexOfFirstPage = indexOfLastPage - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n\n  \n\n  return (\n    <div className=\"container-fluid\">\n      <div class=\"input-group mb-3 mt-3\">\n        <input type=\"text\" class=\"form-control\" \n        placeholder=\"Search post\" \n        aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" />\n        <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Search</button>\n      </div>\n      <p class=\"h2  text-danger text-center\">Posts \"Page {currentPage}\"</p>\n      {\n        currentPosts.map(post => {\n          return <ListPost post={post} key={post.id} />;\n        })\n      }\n      <Pagination />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}