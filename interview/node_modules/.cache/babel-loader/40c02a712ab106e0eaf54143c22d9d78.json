{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoang\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\test\\\\interview\\\\src\\\\Components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentPage } from '../actions';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pagination = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const postsPerPage = useSelector(state => state.postsPerPage); // const currentPage = useSelector(state => state.currentPage);\n\n  const {\n    num\n  } = useParams();\n  let currentPage = null;\n\n  if (num) {\n    currentPage = num;\n  } else {\n    currentPage = 1;\n  } // const posts = useSelector(state => state.posts);\n\n\n  const searchPosts = useSelector(state => state.searchPosts);\n  const totalPost = searchPosts.length;\n  const pageNumber = [];\n\n  const paginate = num => {\n    dispatch(setCurrentPage(num));\n  };\n\n  for (let i = 1; i <= Math.ceil(totalPost / postsPerPage); i++) {\n    pageNumber.push(i);\n  }\n\n  const handleClick = change => {\n    dispatch(setCurrentPage(currentPage + change));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    \"aria-label\": \"Page navigation example\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage === 1 && \"disabled\"}`,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/page/${currentPage - 1}`,\n          className: \"page-link\",\n          tabIndex: \"-1\",\n          \"aria-disabled\": \"true\",\n          onClick: () => handleClick(-1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), pageNumber.map((num, index) => {\n        {\n          /* if(index === currentPage) {\r\n             \r\n          } */\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${index === currentPage - 1 && \"active\"}`,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/page/${num}`,\n            className: \"page-link\",\n            onClick: () => {\n              paginate(num);\n            },\n            children: num\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 32\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage >= pageNumber.length && \"disabled\"}`,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/page/${currentPage + 1}`,\n          onClick: () => handleClick(1),\n          className: \"page-link\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"RqvHPjJ64/BKiItVBhM2w3tDiU8=\", false, function () {\n  return [useDispatch, useSelector, useParams, useSelector];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/test/interview/src/Components/Pagination.js"],"names":["React","useDispatch","useSelector","setCurrentPage","Link","useParams","Pagination","dispatch","postsPerPage","state","num","currentPage","searchPosts","totalPost","length","pageNumber","paginate","i","Math","ceil","push","handleClick","change","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {setCurrentPage} from '../actions';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nexport const Pagination = () => {\r\n    const dispatch = useDispatch();\r\n    const postsPerPage = useSelector(state => state.postsPerPage);\r\n    // const currentPage = useSelector(state => state.currentPage);\r\n    const {num} = useParams();\r\n    let currentPage = null;\r\n    if(num) {\r\n        currentPage = num;\r\n    }\r\n    else {\r\n        currentPage = 1;\r\n    }\r\n    // const posts = useSelector(state => state.posts);\r\n    const searchPosts = useSelector(state => state.searchPosts);\r\n    const totalPost = searchPosts.length;\r\n    const pageNumber = [];\r\n\r\n    const paginate = (num) => {\r\n        dispatch(setCurrentPage(num));\r\n    }\r\n\r\n    for(let i = 1;  i <= Math.ceil(totalPost / postsPerPage); i++) {\r\n        pageNumber.push(i);\r\n    }\r\n\r\n    const handleClick = (change) => {\r\n        dispatch(setCurrentPage(currentPage + change));\r\n    }\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation example\">\r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className={`page-item ${currentPage === 1 && \"disabled\"}`}>\r\n                    <Link to={`/page/${currentPage-1}`} className=\"page-link\" \r\n                    tabIndex=\"-1\" aria-disabled=\"true\"\r\n                    onClick={() => handleClick(-1)}\r\n                    >Previous</Link>\r\n                </li>\r\n                {\r\n                    pageNumber.map((num, index) => {\r\n                        {/* if(index === currentPage) {\r\n                            \r\n                        } */}\r\n                        return <li key={index} className={`page-item ${index===currentPage-1 && \"active\"}`}>\r\n                            <Link to={`/page/${num}`} className=\"page-link\" onClick={() => {paginate(num)}}>{num}</Link>\r\n                            {/* onClick={() => {paginate(num)}} */}\r\n                        </li>;\r\n                    })\r\n                }\r\n                <li className={`page-item ${currentPage >= pageNumber.length && \"disabled\"}`}>\r\n                    <Link to={`/page/${currentPage+1}`} onClick={() => handleClick(1)} className=\"page-link\">Next</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}