{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { all } from 'redux-saga/effects';\nimport postsSaga from './posts';\nimport usersSaga from './user';\nexport default function* rootSaga() {\n  yield all([postsSaga(), usersSaga()]);\n} // const urlPosts = 'https://jsonplaceholder.typicode.com/posts';\n// // const dispatch = useDispatch();\n// const getPostsData = async() => { \n//   return await axios({\n//     method: \"get\",\n//     url: urlPosts\n//   }).then(result => result.data);\n// }\n// function* axiosPost() {\n//   try {\n//     const posts = yield call(getPostsData);\n//     yield put({type: 'GET_POSTS_SUCCESS', payload: posts});\n//   } catch (e) {\n//     yield put({type: 'GET_POSTS_FAILED', message: e.message});\n//   }\n// }\n// export function* postsSaga() {\n//   yield takeEvery('GET_POSTS_REQUEST', axiosPost);\n// }\n// export default postsSaga;","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/test/interview/src/saga/index.js"],"names":["call","put","takeEvery","takeLatest","axios","all","postsSaga","usersSaga","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,SAAP,MAAsB,QAAtB;AAEA,eAAe,UAAUC,QAAV,GAAqB;AAClC,QAAMH,GAAG,CAAC,CACRC,SAAS,EADD,EACKC,SAAS,EADd,CAAD,CAAT;AAGD,C,CAGD;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {all} from 'redux-saga/effects';\r\nimport postsSaga from './posts';\r\nimport usersSaga from './user';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    postsSaga(), usersSaga()\r\n  ])\r\n}\r\n\r\n\r\n// const urlPosts = 'https://jsonplaceholder.typicode.com/posts';\r\n\r\n// // const dispatch = useDispatch();\r\n\r\n// const getPostsData = async() => { \r\n//   return await axios({\r\n//     method: \"get\",\r\n//     url: urlPosts\r\n//   }).then(result => result.data);\r\n// }\r\n\r\n// function* axiosPost() {\r\n//   try {\r\n//     const posts = yield call(getPostsData);\r\n//     yield put({type: 'GET_POSTS_SUCCESS', payload: posts});\r\n//   } catch (e) {\r\n//     yield put({type: 'GET_POSTS_FAILED', message: e.message});\r\n//   }\r\n// }\r\n\r\n// export function* postsSaga() {\r\n//   yield takeEvery('GET_POSTS_REQUEST', axiosPost);\r\n// }\r\n\r\n// export default postsSaga;"]},"metadata":{},"sourceType":"module"}