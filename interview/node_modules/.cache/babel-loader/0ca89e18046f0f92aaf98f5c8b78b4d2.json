{"ast":null,"code":"import { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // import { createStore } from 'redux';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst initialState = {\n  posts: [],\n  users: [],\n  currentPage: 1,\n  postsPerPage: 10,\n  postDetail: {},\n  error: null\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_POSTS_REQUEST':\n      return { ...state\n      };\n\n    case 'GET_POSTS_SUCCESS':\n      return { ...state,\n        posts: action.payload\n      };\n\n    case 'GET_POSTS_FAILED':\n      return { ...state,\n        error: action.message\n      };\n    // case 'setData':\n    //     return {...state, posts: action.payload};\n\n    case 'GET_USERS_REQUEST':\n      return { ...state\n      };\n\n    case 'GET_USERS_SUCCESS':\n      return { ...state,\n        users: action.payload\n      };\n\n    case 'GET_USERS_FAILED':\n      return { ...state,\n        error: action.message\n      };\n\n    case 'setCurrentPage':\n      return { ...state,\n        currentPage: action.payload\n      };\n\n    case 'setPostDetail':\n      return { ...state,\n        postDetail: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nexport const persist_Reducer = persistReducer(persistConfig, rootReducer); // export const store = createStore(persist_Reducer,\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport const store = compose(applyMiddleware(sagaMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())(createStore)(persist_Reducer);\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  rootReducer,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/test/interview/src/reducers/index.js"],"names":["persistStore","persistReducer","storage","createStore","applyMiddleware","compose","createSagaMiddleware","rootSaga","sagaMiddleware","initialState","posts","users","currentPage","postsPerPage","postDetail","error","rootReducer","state","action","type","payload","message","persistConfig","key","persist_Reducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","run","persistor"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,WAAW,EAAE,CAHI;AAIjBC,EAAAA,YAAY,EAAE,EAJG;AAKjBC,EAAAA,UAAU,EAAE,EALK;AAMjBC,EAAAA,KAAK,EAAE;AANU,CAArB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,mBAAL;AACI,aAAO,EAAC,GAAGF;AAAJ,OAAP;;AACJ,SAAK,mBAAL;AACI,aAAO,EAAC,GAAGA,KAAJ;AAAWP,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAAzB,OAAP;;AACJ,SAAK,kBAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAAzB,OAAP;AACJ;AACA;;AAEA,SAAK,mBAAL;AACI,aAAO,EAAC,GAAGJ;AAAJ,OAAP;;AACJ,SAAK,mBAAL;AACI,aAAO,EAAC,GAAGA,KAAJ;AAAWN,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAAzB,OAAP;;AACJ,SAAK,kBAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAAzB,OAAP;;AAEJ,SAAK,gBAAL;AACI,aAAO,EAAC,GAAGJ,KAAJ;AAAWL,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAA/B,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAA9B,OAAP;;AACJ;AACI,aAAOH,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,MAAMK,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBrB,EAAAA;AAFkB,CAAtB;AAOA,OAAO,MAAMsB,eAAe,GAAGvB,cAAc,CAACqB,aAAD,EAAgBN,WAAhB,CAAtC,C,CAEP;AACA;;AAEA,OAAO,MAAMS,KAAK,GAAIpB,OAAO,CACzBD,eAAe,CAACI,cAAD,CADU,EAEzBkB,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFd,CAAP,CAGpBxB,WAHoB,EAGPqB,eAHO,CAAf;AAKPhB,cAAc,CAACoB,GAAf,CAAmBrB,QAAnB;AAEA,OAAO,MAAMsB,SAAS,GAAG7B,YAAY,CAACyB,KAAD,CAA9B;AAEP,eAAe;AAACT,EAAAA,WAAD;AAAea,EAAAA;AAAf,CAAf","sourcesContent":["import { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// import { createStore } from 'redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    users: [],\r\n    currentPage: 1,\r\n    postsPerPage: 10,\r\n    postDetail: {},\r\n    error: null,\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'GET_POSTS_REQUEST':\r\n            return {...state};\r\n        case 'GET_POSTS_SUCCESS':\r\n            return {...state, posts: action.payload};\r\n        case 'GET_POSTS_FAILED':\r\n            return {...state, error: action.message};\r\n        // case 'setData':\r\n        //     return {...state, posts: action.payload};\r\n\r\n        case 'GET_USERS_REQUEST':\r\n            return {...state};\r\n        case 'GET_USERS_SUCCESS':\r\n            return {...state, users: action.payload};\r\n        case 'GET_USERS_FAILED':\r\n            return {...state, error: action.message};\r\n\r\n        case 'setCurrentPage':\r\n            return {...state, currentPage: action.payload};\r\n        case 'setPostDetail':\r\n            return {...state, postDetail: action.payload};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\n\r\n\r\nexport const persist_Reducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// export const store = createStore(persist_Reducer,\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport const store =  compose(\r\n    applyMiddleware(sagaMiddleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)(createStore)(persist_Reducer);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {rootReducer , persistor};"]},"metadata":{},"sourceType":"module"}