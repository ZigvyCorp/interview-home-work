{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoang\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\test\\\\interview\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setData } from './actions';\nimport { getPosts } from './actions';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { Post } from './Components/Post';\nimport { Page } from './Components/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst urlPosts = 'https://jsonplaceholder.typicode.com/posts';\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const currentPage = useSelector(state => state.currentPage);\n  const postsPerPage = useSelector(state => state.postsPerPage);\n\n  const getData = async () => {\n    const data = await axios({\n      method: \"get\",\n      url: urlPosts\n    }).then(result => {\n      dispatch(setData(result.data));\n    });\n  };\n\n  useEffect(() => {\n    getData(); // dispatch(getPosts());\n  }, []); // const indexOfLastPage = currentPage * postsPerPage;\n  // const indexOfFirstPage = indexOfLastPage - postsPerPage;\n  // const currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/detail/:id\",\n          children: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/page/:num\",\n          children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"Z4FCqMRaSFt5qT7tdVP3WInNcRM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/test/interview/src/App.js"],"names":["React","useEffect","axios","useSelector","useDispatch","setData","getPosts","BrowserRouter","Router","Switch","Route","Link","Post","Page","urlPosts","App","dispatch","posts","state","currentPage","postsPerPage","getData","data","method","url","then","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAAQC,QAAR,QAAuB,WAAvB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAEA,MAAMC,QAAQ,GAAG,4CAAjB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,KAAK,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,WAAW,GAAGhB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA/B;AACA,QAAMC,YAAY,GAAGjB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACE,YAAhB,CAAhC;;AAEA,QAAMC,OAAO,GAAG,YAAW;AAEzB,UAAMC,IAAI,GAAG,MAAMpB,KAAK,CAAC;AACvBqB,MAAAA,MAAM,EAAE,KADe;AAEvBC,MAAAA,GAAG,EAAEV;AAFkB,KAAD,CAAL,CAGhBW,IAHgB,CAGXC,MAAM,IAAI;AAChBV,MAAAA,QAAQ,CAACX,OAAO,CAACqB,MAAM,CAACJ,IAAR,CAAR,CAAR;AACD,KALkB,CAAnB;AAMD,GARD;;AAUArB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,GADO,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT,CAhBa,CAqBb;AACA;AACA;;AAIA,sBAEE;AAAA,2BACA,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,aAAZ;AAAA,iCACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,YAAlB;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,mBAFF;AAmBD;;GA9CQN,G;UACUX,W,EACHD,W,EACMA,W,EACCA,W;;;KAJdY,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { setData } from './actions';\nimport {getPosts} from './actions';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { Post } from './Components/Post';\nimport { Page } from './Components/Page';\n\nconst urlPosts = 'https://jsonplaceholder.typicode.com/posts';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const currentPage = useSelector(state => state.currentPage);\n  const postsPerPage = useSelector(state => state.postsPerPage);\n\n  const getData = async() => {\n    \n    const data = await axios({\n      method: \"get\",\n      url: urlPosts\n    }).then(result => {\n      dispatch(setData(result.data));\n    });\n  }\n\n  useEffect(() => {\n    getData();\n    // dispatch(getPosts());\n  }, []);\n\n  // const indexOfLastPage = currentPage * postsPerPage;\n  // const indexOfFirstPage = indexOfLastPage - postsPerPage;\n  // const currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n\n  \n\n  return (\n    \n    <>\n    <Router>\n      <Switch>\n          <Route path=\"/detail/:id\">\n           <Post/>\n          </Route>\n          <Route exact path=\"/\">\n            <Page />\n          </Route>\n          <Route exact path=\"/page/:num\">\n            <Page />\n          </Route>\n        </Switch>\n    </Router>\n    \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}