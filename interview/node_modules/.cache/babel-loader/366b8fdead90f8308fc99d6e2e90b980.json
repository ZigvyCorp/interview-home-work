{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nconst urlUser = `https://jsonplaceholder.typicode.com/users`; // const dispatch = useDispatch();\n\nconst getUsersData = async () => {\n  return await axios({\n    method: \"get\",\n    url: urlUser\n  }).then(result => result.data);\n};\n\nfunction* axiosUser() {\n  try {\n    const users = yield call(getUsersData);\n    yield put({\n      type: 'GET_USERS_SUCCESS',\n      payload: users\n    });\n  } catch (e) {\n    yield put({\n      type: 'GET_USERS_FAILED',\n      message: e.message\n    });\n  }\n}\n\nfunction* usersSaga() {\n  yield takeEvery('GET_USERS_REQUEST', axiosUser);\n}\n\nexport default usersSaga;","map":{"version":3,"sources":["C:/Users/hoang/OneDrive/Máy tính/interview-home-work/interview/src/saga/user.js"],"names":["call","put","takeEvery","axios","urlUser","getUsersData","method","url","then","result","data","axiosUser","users","type","payload","e","message","usersSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAI,4CAAjB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,YAAW;AAC9B,SAAO,MAAMF,KAAK,CAAC;AACjBG,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAEH;AAFY,GAAD,CAAL,CAGVI,IAHU,CAGLC,MAAM,IAAIA,MAAM,CAACC,IAHZ,CAAb;AAID,CALD;;AAOA,UAAUC,SAAV,GAAsB;AACpB,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMZ,IAAI,CAACK,YAAD,CAAxB;AACA,UAAMJ,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAE,mBAAP;AAA4BC,MAAAA,OAAO,EAAEF;AAArC,KAAD,CAAT;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACV,UAAMd,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAE,kBAAP;AAA2BG,MAAAA,OAAO,EAAED,CAAC,CAACC;AAAtC,KAAD,CAAT;AACD;AACF;;AAED,UAAUC,SAAV,GAAsB;AACpB,QAAMf,SAAS,CAAC,mBAAD,EAAsBS,SAAtB,CAAf;AACD;;AAED,eAAeM,SAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nconst urlUser = `https://jsonplaceholder.typicode.com/users`;\r\n\r\n// const dispatch = useDispatch();\r\n\r\nconst getUsersData = async() => { \r\n  return await axios({\r\n    method: \"get\",\r\n    url: urlUser\r\n  }).then(result => result.data);\r\n}\r\n\r\nfunction* axiosUser() {\r\n  try {\r\n    const users = yield call(getUsersData);\r\n    yield put({type: 'GET_USERS_SUCCESS', payload: users});\r\n  } catch (e) {\r\n    yield put({type: 'GET_USERS_FAILED', message: e.message});\r\n  }\r\n}\r\n\r\nfunction* usersSaga() {\r\n  yield takeEvery('GET_USERS_REQUEST', axiosUser);\r\n}\r\n\r\nexport default usersSaga;"]},"metadata":{},"sourceType":"module"}